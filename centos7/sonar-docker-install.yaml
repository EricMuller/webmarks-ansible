---
- name: Install sonar
  hosts: default
  become: yes

  vars_files:
    - certs.yaml
    - sonar.yaml
  vars:
    docker_network_name: sonar-network
    docker_container_db_name: sonar-db-srv
    docker_container_app_name: sonar-srv

    keycloak_admin: admin
    keycloak_admin_password: pass
    keycloak_hostname: sonar-dev.webmarks.net

  pre_tasks:
    - name: Install docker library
      pip:
        name: docker

  tasks:
#    - name: Display some facts
#      debug:
#        msg: "The hostname is {{ ansible_net_hostname }} and the OS is {{ ansible_net_version }}"

    - name: "Stop running sonar containers"
      docker_container:
        name: "{{ item }}"
        state: stopped
      ignore_errors: yes
      with_items:
        - "{{docker_container_db_name}}"
        - "{{docker_container_app_name}}"

    - name: "Remove sonar containers"
      docker_container:
        name: "{{ item }}"
        state: absent
      with_items:
        - "{{docker_container_db_name}}"
        - "{{docker_container_app_name}}"

    - name: "Remove sonar network"
      docker_network:
        name: "{{docker_network_name}}"
        state: absent

    - name: "Create sonar network"
      docker_network:
        name: "{{docker_network_name}}"
        driver: bridge

    - name:  Create and Run DB container
      docker_container:
        hostname: "{{docker_container_db_name}}"
        name: "{{docker_container_db_name}}"
        image: postgres:14.2
        state: started
        restart: yes
        volumes:
          - "sonar_db_data:/var/lib/postgresql/data"
        restart_policy: unless-stopped
        networks:
          - name: "{{docker_network_name}}"
        env:
          POSTGRES_DB: "{{docker_db}}"
          POSTGRES_USER: "{{docker_db_user}}"
          POSTGRES_PASSWORD: "{{docker_db_password}}"

    - name:  Create and  Run Keycloak container
      docker_container:
        hostname: "{{docker_container_app_name}}"
        name: "{{docker_container_app_name}}"
        image: sonarqube
        # command: "start --auto-build --db=postgres --features=token-exchange --hostname-strict=false --db-url=jdbc:postgresql://{{docker_container_db_name}}:5432/{{docker_db}} --db-username={{docker_db_user}} --db-password={{docker_db_password}} --https-key-store-file=/etc/certs/keystore --https-key-store-password={{public_keystore_password}} -Dkeycloak.profile.feature.scripts=enabled -Dkeycloak.profile.feature.upload_scripts=enabled"
        state: started
        restart: yes
        ports:
          - "9000:9000"
        volumes:
          - "sonarqube_data:/opt/sonarqube/data"
          - "sonarqube_extensions:/opt/sonarqube/extensions"
          - "sonarqube_logs:/opt/sonarqube/logs"
        env:
          SONAR_JDBC_URL: "jdbc:postgresql://localhost/{{docker_db}}"
          SONAR_JDBC_USERNAME: "{{docker_db_user}}"
          SONAR_JDBC_PASSWORD: "{{docker_db_password}}"

        restart_policy: unless-stopped
        networks:
          - name: "{{docker_network_name}}"

