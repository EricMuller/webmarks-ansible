---
- name: Initialise qcm app with default  index site
  hosts: 'all'
  become: yes

  vars_files:
    - devops.yaml
    - qcm.yaml

  vars:
      scheme: "https"
      latest_dist_dir: "/qcm/dist/latest"

  pre_tasks:

    - name: checking limit arg
      fail:
          msg: "you must use -l or --limit - when you really want to use all hosts, use -l 'all'"
      when: ansible_limit is not defined
      run_once: true

  tasks:

    - name: "Create qcm network"
      docker_network:
        name: "{{ docker_network_name }}"
        driver: bridge

    - name:  "Create and  Run DB container"
      docker_container:
        hostname: "{{docker_container_db_name}}"
        name: "{{docker_container_db_name}}"
        image: postgres:10.12
        state: started
        restart: yes
        volumes:
         - "{{ docker_volume_db_data }}:/var/lib/postgresql/data"
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network_name }}"
        env:
          POSTGRES_DB: "{{ docker_db }}"
          POSTGRES_USER: "{{ docker_db_user }}"
          POSTGRES_PASSWORD: "{{ docker_db_password }}"
      ignore_errors: yes


    - name: "Stop running {{ docker_container_app_name }} container"
      docker_container:
        name: "{{ item }}"
        state: stopped
      ignore_errors: yes
      with_items:
        - "{{ docker_container_app_name }}"

    - name: "Remove {{ docker_container_app_name }} container"
      docker_container:
        name: "{{ item }}"
        state: absent
      with_items:
        - "{{ docker_container_app_name }}"
      ignore_errors: yes

    - name:  "Create and  app rest container {{docker_container_app_img}} --> {{docker_container_app_name}} "
      docker_container:
        hostname: "{{docker_container_app_name}}"
        name: "{{docker_container_app_name}}"
        image: "{{docker_container_app_img}}"
        state: started
        pull: true
        restart: yes
        restart_policy: unless-stopped
        networks:
          - name: "{{ docker_network_name }}"
        ports:
          - "{{ qcm_port }}:{{ qcm_port }}"
        env:
          KEYCLOAK_ISSUER_URI: "{{ keycloak_issuer_uri }}"
          KEYCLOAK_CLIENT_ID: "{{ keycloak_client_id  }}"
          KEYCLOAK_CLIENT_SECRET: "{{ keycloak_client_secret }}"
          SPRING_DATASOURCE_URL: "jdbc:postgresql://{{ docker_container_db_name }}:5432/{{ docker_db }}?user={{ docker_db_user }}&password={{ docker_db_password }}"
          KEYCLOAK_REALM: "{{ keycloak_realm }}"
          KEYCLOAK_AUTH_URI: "{{ keycloak_auth_uri }}"
          OPENAPI_SERVER_URI: "{{ openapi_server_uri }}"

    - name: Get infos on container
      docker_container_info:
        name: "{{docker_container_app_name}}"
      register: result

    - name: Print information about container
      debug:
        var: result
      when: result
